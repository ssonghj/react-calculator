{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/History.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-testid","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","History_templateObject","History","History_Container","button","history","Calculator_templateObject","Box","_templateObject2","evalFunc","string","includes","replace","Function","Math","sqrt","i","Calculator","state","ClickButton","console","log","setState","getAttribute","key","_this$state$displayVa","lastChar","substr","length","operatorKeys","proc","AC","BS","√","÷","×","-","+","=",".","cal","substring","lastIndexOf","0","Number","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","components_History","map","result","display","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.3d4a30d3.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    return <Container>{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 5px;\r\n  [data-display] {\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 0 15px;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nclass ButtonGroup extends React.Component {\r\n  handleClick = e => {\r\n    this.props.onClickButton(e.target.textContent);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { size = 1, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        <button data-color={color}>{children}</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  height: 374px;\r\n  padding: 10px;\r\n  margin: 20px auto;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  ::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`;\r\n\r\n// TODO: Panel 을 참고해서 History component 생성 및 export\r\nclass History extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container data-testid=\"history\" onClick={this.props.button}>{this.props.children}</Container>\r\n        );\r\n    }\r\n}\r\nexport default History;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Panel from \"./Panel\";\r\nimport Display from \"./Display\";\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport Button from \"./Button\";\r\nimport History from \"./History\";\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n`;\r\n\r\n// TODO: History 내에서 수식 표시할 때 사용\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  width: 270px;\r\n  height: 65px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: right;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  h3 {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst evalFunc = function (string) {\r\n    // eslint-disable-next-line no-new-func\r\n    if (string.includes(\"√\")) {\r\n        \r\n        string.replace(\"(\", \"\");\r\n        string.replace(\")\", \"\");\r\n        string = string.replace(\"√\", \"\");\r\n\r\n        return new Function( \"return (\" + Math.sqrt(evalFunc(string))+\")\")();\r\n    }\r\n\r\n    string = string.replace(/÷/gi, \"/\");\r\n    string = string.replace(/×/gi, \"*\");\r\n    return new Function(\"return (\" + string + \")\")();\r\n};\r\n\r\nvar i = 100;\r\nvar history;\r\nclass Calculator extends React.Component {\r\n    // TODO: history 추가\r\n    state = {\r\n        displayValue: \"\",\r\n        history: history = []\r\n    };\r\n\r\n    ClickButton = e => {\r\n        console.log(e.target);\r\n        this.setState({\r\n            displayValue: e.target.getAttribute('display'),\r\n        })\r\n    }\r\n\r\n    onClickButton = key => {\r\n        let { displayValue = \"\" } = this.state;\r\n        displayValue = \"\" + displayValue;\r\n        const lastChar = displayValue.substr(displayValue.length - 1);\r\n        const operatorKeys = [\"÷\", \"×\", \"-\", \"+\", \".\", \"√\"];\r\n        const proc = {\r\n            AC: () => {\r\n                this.setState({ displayValue: \"\" });\r\n            },\r\n            BS: () => {\r\n                if (displayValue.length > 0) {\r\n                    displayValue = displayValue.substr(0, displayValue.length - 1);\r\n                }\r\n                this.setState({ displayValue });\r\n            },\r\n            // TODO: 제곱근 구현\r\n            \"√\": () => {\r\n                if (displayValue.length == 0) {\r\n                    return;\r\n                }\r\n                else {\r\n                    if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {//루트 들어오면 디스플레이에 추가\r\n                        history[i] = \"√(\" + displayValue + \")\";//현재 displayValue 배열에 저장\r\n                        this.setState({ displayValue: \"√(\" + displayValue + \")\" });//맨앞에 배치\r\n                    }\r\n\r\n                    //사칙연산과 함께 들어올 경우\r\n                    if (lastChar !== \"\" && (displayValue.includes(\"+\") || displayValue.includes(\"-\") || displayValue.includes(\"×\") || displayValue.includes(\"÷\"))) {\r\n                        //사칙연산 계산한 값에 루트를 씌워서 창에 띄운다\r\n                        if (displayValue.includes(\"×\")) {\r\n                            displayValue = Math.sqrt(evalFunc(displayValue.replace(/×/gi, \"*\")));\r\n                        }\r\n                        else if (displayValue.includes(\"÷\")) {\r\n                            displayValue = Math.sqrt(evalFunc(displayValue.replace(/÷/gi, \"/\")));\r\n                        }\r\n                        else {\r\n                           \r\n                            displayValue = Math.sqrt(evalFunc(displayValue.replace(\"√\", \"\")));\r\n                        }\r\n                        this.setState({ displayValue });\r\n                    }\r\n                    else {\r\n                        if (displayValue.includes(\"√\")) {\r\n                            displayValue = Math.sqrt(evalFunc(displayValue));\r\n                            this.setState({ displayValue })\r\n                        }\r\n                        else {\r\n                            displayValue = Math.sqrt(displayValue.substr(0, displayValue.length));//사칙연산 없으면 그냥 루트만 해준다.\r\n                            this.setState({ displayValue });\r\n                        }\r\n                    }\r\n\r\n                    i--;//전역변수 i 값 감소\r\n                    this.setState({ displayValue });\r\n                }\r\n            },\r\n            // TODO: 사칙연산 구현\r\n            \"÷\": () => {\r\n                if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {//나눗셈\r\n                    this.setState({ displayValue: displayValue + \"÷\" });\r\n                }\r\n            },\r\n            \"×\": () => {\r\n                if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {//곱셈\r\n                    this.setState({ displayValue: displayValue + \"×\" });\r\n                }\r\n            },\r\n            \"-\": () => {\r\n                if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {//빼기\r\n                    this.setState({ displayValue: displayValue + \"-\" });\r\n                }\r\n            },\r\n            \"+\": () => {\r\n                // + 연산 참고하여 연산 구현\r\n                if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n                    this.setState({ displayValue: displayValue + \"+\" });\r\n                }\r\n            },\r\n            \"=\": () => {\r\n\r\n                history[i] = displayValue;//연산 전의 값 배열에 저장\r\n\r\n                if (displayValue.includes(\"√\")) {//복원값에 루트 포함일 경우\r\n                    displayValue = displayValue.replace(\"√\", \"\");\r\n                    displayValue = displayValue.replace(\"(\", \"\");\r\n                    displayValue = displayValue.replace(\")\", \"\");\r\n\r\n                    if (lastChar !== \"\" && (displayValue.includes(\"+\") || displayValue.includes(\"-\") || displayValue.includes(\"×\") || displayValue.includes(\"÷\"))) {\r\n                        //사칙연산 계산한 값에 루트를 씌워서 창에 띄운다\r\n                        if (displayValue.includes(\"×\")) {\r\n                            displayValue = Math.sqrt(evalFunc(displayValue.replace(/×/gi, \"*\")));\r\n                        }\r\n                        else if (displayValue.includes(\"÷\")) {\r\n                            displayValue = Math.sqrt(evalFunc(displayValue.replace(/÷/gi, \"/\")));\r\n                        }\r\n                        else {\r\n                            displayValue = Math.sqrt(evalFunc(displayValue.replace(\"√\", \"\")));\r\n                        }\r\n                        this.setState({ displayValue });\r\n                    }\r\n                    else {\r\n                        displayValue = Math.sqrt(displayValue.substr(0, displayValue.length));//사칙연산 없으면 그냥 루트만 해준다.\r\n                        this.setState({ displayValue });\r\n                    }\r\n                }\r\n                else {//루트 없을 경우\r\n                    if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n                        displayValue = displayValue.substr(0, displayValue.length - 1);\r\n                    }\r\n                    else if (lastChar !== \"\" && displayValue.includes(\"×\")) {//곱하기가 들어올 경우\r\n                        //replace로 대체해서 곱해주기\r\n\r\n                        displayValue = evalFunc(displayValue.replace(/×/gi, \"*\"));\r\n                    }\r\n                    else if (lastChar !== \"\" && displayValue.includes(\"÷\")) {//나눗셈이 들어올 경우\r\n                        //replace로 대체해서 나눠주기\r\n                        displayValue = evalFunc(displayValue.replace(/÷/gi, \"/\"));\r\n                    }\r\n                    else if (lastChar !== \"\") {\r\n                        displayValue = evalFunc(displayValue);\r\n                    }\r\n\r\n                }\r\n                i--;//전역변수 i값 감소\r\n                this.setState({ displayValue });\r\n            },\r\n\r\n            \".\": () => {//소수점\r\n                var cal = (displayValue.includes(\"+\") || displayValue.includes(\"-\") || displayValue.includes(\"×\") || displayValue.includes(\"÷\"));\r\n\r\n                //사칙연산 기호 나오기 전\r\n                if (displayValue.includes(\".\") && !(cal)) {//사칙연산은 없고 디스플레이 벨류에 이미 .이 있다면\r\n\r\n                }\r\n                else if (lastChar !== \"\" && !operatorKeys.includes(lastChar) && !(cal)) {\r\n                    this.setState({ displayValue: displayValue + \".\" });\r\n                }\r\n\r\n                //사칙연산 기호 나온 후\r\n                //+ 더하기\r\n                if (lastChar == \".\" || (displayValue.substring(displayValue.lastIndexOf(\"+\"), displayValue.length).includes(\".\"))) {//3.3+3?\r\n\r\n                }\r\n                else if (lastChar !== \"\" && !operatorKeys.includes(lastChar) && cal) {\r\n                    this.setState({ displayValue: displayValue + \".\" });\r\n                }\r\n                //- 빼기\r\n                if (lastChar == \".\" || (displayValue.substring(displayValue.lastIndexOf(\"-\"), displayValue.length).includes(\".\"))) {//3.3+3?\r\n\r\n                }\r\n                else if (lastChar !== \"\" && !operatorKeys.includes(lastChar) && cal) {\r\n                    this.setState({ displayValue: displayValue + \".\" });\r\n                }\r\n                //* 곱셈\r\n                if (lastChar == \".\" || (displayValue.substring(displayValue.lastIndexOf(\"×\"), displayValue.length).includes(\".\"))) {//3.3+3?\r\n\r\n                }\r\n                else if (lastChar !== \"\" && !operatorKeys.includes(lastChar) && cal) {\r\n                    this.setState({ displayValue: displayValue + \".\" });\r\n                }\r\n                // / 나눗셈\r\n                if (lastChar == \".\" || (displayValue.substring(displayValue.lastIndexOf(\"÷\"), displayValue.length).includes(\".\"))) {//3.3+3?\r\n\r\n                }\r\n                else if (lastChar !== \"\" && !operatorKeys.includes(lastChar) && cal) {\r\n                    this.setState({ displayValue: displayValue + \".\" });\r\n                }\r\n\r\n            },\r\n\r\n            \"0\": () => {\r\n                if (Number(displayValue) !== 0) {\r\n                    displayValue += \"0\";\r\n                    this.setState({ displayValue });\r\n                }\r\n            }\r\n        };\r\n\r\n        if (proc[key]) {\r\n            proc[key]();\r\n        } else {\r\n            // 여긴 숫자\r\n            this.setState({ displayValue: displayValue + key });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Panel>\r\n                    <Display displayValue={this.state.displayValue} />\r\n                    <ButtonGroup onClickButton={this.onClickButton}>\r\n                        <Button size={1} color=\"gray\">\r\n                            AC\r\n            </Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            BS\r\n            </Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            √\r\n            </Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            ÷\r\n            </Button>\r\n\r\n                        <Button size={1}>7</Button>\r\n                        <Button size={1}>8</Button>\r\n                        <Button size={1}>9</Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            ×\r\n            </Button>\r\n\r\n                        <Button size={1}>4</Button>\r\n                        <Button size={1}>5</Button>\r\n                        <Button size={1}>6</Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            -\r\n            </Button>\r\n\r\n                        <Button size={1}>1</Button>\r\n                        <Button size={1}>2</Button>\r\n                        <Button size={1}>3</Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            +\r\n            </Button>\r\n\r\n                        <Button size={2}>0</Button>\r\n                        <Button size={1}>.</Button>\r\n                        <Button size={1} color=\"gray\">\r\n                            =\r\n            </Button>\r\n                    </ButtonGroup>\r\n                </Panel>\r\n                {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */\r\n                    <History button={this.ClickButton}>\r\n                        {this.state.history.map((result) => {\r\n                            return (\r\n                                <Box display={result}>\r\n                                    {(result)}<br />{\" = \" + (evalFunc(result)) }\r\n                                </Box>\r\n                            )\r\n                        })\r\n                        }\r\n                    </History>\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default Calculator;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}